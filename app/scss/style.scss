@import "compass";
@import "variables";

/*==========  Fonts  ==========*/

@font-face {
    font-family: 'Roboto';
    src: url('fonts/roboto-regular-webfont.eot');
    src: url('fonts/roboto-regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('fonts/roboto-regular-webfont.woff2') format('woff2'),
         url('fonts/roboto-regular-webfont.woff') format('woff'),
         url('fonts/roboto-regular-webfont.ttf') format('truetype'),
         url('fonts/roboto-regular-webfont.svg#robotoregular') format('svg');
    font-weight: normal;
    font-style: normal;

}

/*===========================================
=            Usinacraft Launcher            =
===========================================*/

body {
	background: $basic_blue;
	height: 100%;
	font-family: 'Roboto';
	font-size: 16px;
	margin: 0;
	padding: 0;
}

a, a:visited {
	color: $basic_blue;
}

#main-background {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	opacity: 0;
	z-index: -1;
	min-height: 100%;
	background-image:url('images/background.png');
	background-size: 100%;
	background-position: 0 80px;
	background-repeat: no-repeat;
}

#header {
	background: darken($basic_blue, 10%);
	width: 100%;
	height: 80px;
	margin-bottom: 25px;
	border-bottom: 2px solid lighten($basic_black, 9%);
	@include box-shadow(0 2px 8px lighten($basic_black, 10%));
	#main-logo {
		display: inline-block;
		float: left;
		margin: 10px;
		max-height: 80%;
	}
	#main-title {
		float: left;
		margin-top: 18px;
		margin-left: 15px;
		color: $basic_white;
	}
}

#footer {
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	border-top: 2px solid lighten($basic_black, 9%);
	background: darken($basic_blue, 10%);
	height: 60px;
	.social-links {
		margin: 5px 60px;
		padding: 0;
		a {
			color: $basic_white;
			text-decoration: none;
			font-size: 2em;
			@include transition(color 250ms);
			&:hover {
				color: darken($basic_white, 16%);
				@include transition(color 250ms);
			}
		}
	}
}

/*=============================
=            Panel            =
=============================*/

#content {
	min-height: 100%;
}

/*=====================================
=            Basic classes            =
=====================================*/

.basic-panel {
	background: rgba(50,50,50,0.85);
	padding: 10px 20px;
	width: 83%;
	margin: 20px auto;
	min-height: 100%;
	@include clearfix;
	@include box-shadow(0 0 10px lighten($basic_black, 12%));
	* {
		color: $basic_white;
	}
}

.basic-label {
	display: inline-block;
	margin: 0 10px;
}

.basic-select {
	color: black;
	padding: 7px 10px;
	outline: none;
	border: 2px solid lighten($basic_blue, 8%);
	@include border-radius(2px);
	option {
		color: black;
	}
	&:disabled {
		background: $disabled_color;
		color: $basic_white;
		border-color: darken($disabled_color, 10%);
	}
}

.basic-button {
	display: inline-block;
	background: $basic_blue;
	color: $basic_white;
	font-weight: bold;
	padding: 10px 15px;
	border: none;
	cursor: pointer;
	@include box-shadow(0 1px 5px lighten($basic_black, 10%));
	@include transition(background 250ms, box-shadow 250ms);
	@include border-radius(2px);
	&:hover {
		background: darken($basic_blue, 6%);
		@include transition(background 300ms, box-shadow 250ms);
	}
	&:focus {
		outline: none;
	}
	&:active {
		background: darken($basic_blue, 8%);
		outline: none;
		@include transition(background 100ms, box-shadow 250ms);
		@include box-shadow(0 3px 12px lighten($basic_black, 10%));
	}
	&:disabled {
		background: $disabled_color;
		cursor: default;
	}
}

.basic-checkbox {
	[type="checkbox"]:not(:checked), [type="checkbox"]:checked {
	  position: absolute;
	  left: -9999px;
	}
	[type="checkbox"]:not(:checked) + label, [type="checkbox"]:checked + label {
		position: relative; /* permet de positionner les pseudo-éléments */
		padding-left: 25px; /* fait un peu d'espace pour notre case à venir */
		cursor: pointer;    /* affiche un curseur adapté */
	}
	[type="checkbox"]:not(:checked) + label:before, [type="checkbox"]:checked + label:before {
		content: '';
		position: absolute;
		left:0; 
		top: 2px;
		width: 17px; 
		height: 17px;
		border: 1px solid darken($basic_white, 5%);
		background: $basic_white;
		@include border-radius(3px);
		@include box-shadow(inset 0 1px 3px rgba(0,0,0,.3));
	}
	/* Cochée */
	[type="checkbox"]:not(:checked) + label:after, [type="checkbox"]:checked + label:after {
		content: '\e805';
		font-family: 'fontello';
		position: absolute;
		top: 2px; 
		left: 3px;
		font-size: 14px;
		color: $basic_blue;
		@include transition(all 200ms);
	}
	/* Aspect si "pas cochée" */
	[type="checkbox"]:not(:checked) + label:after {
		opacity: 0;
		@include transform(scale(0));
	}
	/* Aspect si "cochée" */
	[type="checkbox"]:checked + label:after {
		opacity: 1;
		@include transform(scale(1));
	}
	/* Aspect désactivée */
	[type="checkbox"]:disabled:not(:checked) + label:before,
	[type="checkbox"]:disabled:checked + label:before {
	  box-shadow: none;
	  border-color: #bbb;
	  background-color: #ddd;
	}
	/* styles de la coche (si cochée/désactivée) */
	[type="checkbox"]:disabled:checked + label:after {
	  color: #999;
	}
	/* on style aussi le label quand désactivé */
	[type="checkbox"]:disabled + label {
	  color: #aaa;
	  cursor: default;
	}
}

.row {
	width: 100%;
	margin: 15px auto;
	display: block;
}

.min-row {
	@extend .row;
	width: 95% !important;
}

/*================================
=            Tooltips            =
================================*/

@mixin triangle($direction, $size: 8px, $color: #222){
	content: '';
	display: block;
	position: absolute;
	height: 0; width: 0;
	@if ($direction == 'up'){
		border-bottom: $size solid $color;
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: none;
	}
	@else if ($direction == 'down'){
		border-top: $size solid $color;
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: none;
	}
	@else if ($direction == 'left'){
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		border-left: none;
	}
	@else if ($direction == 'right'){
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		border-right: none;
	}
}

@mixin respondTo($media) {
  @if $media == smartphone {
    @media (max-width: $smartphone) { @content; }
  }
  @else if $media == tablet {
    @media (min-width: $tabletPortrait) and (max-width: $tabletLandscape) { @content; }
  }
  @else if $media == smallScreen {
    @media (max-width: $desktop) { @content; }
  }
  @else if $media == desktop {
    @media (min-width: $desktop) { @content; }
  }
}

@mixin tooltip($direction: nw, $bg-color: #000, $title: false) {
  // configuration variables
  $triangle-size: 6px; // = height of triangle, width is 2x
  $tooltip-width: 230px;
  $fade: 300ms;
  $white: #fff;
  $black: #000;

  position: relative; // can override this to absolute or fixed if necessary. Just can't be static

  &:before, &:after {
    opacity: 0;
    z-index: 98;
    @include transition(opacity $fade, visibility 0ms linear $fade); // delay visibility on fade out
    pointer-events: none;
    @include respondTo(smartphone){ display: none; }
  }
  &:before { // tooltip body
    content: attr(data-tooltip);
    position: absolute;
    width: $tooltip-width;
    padding: 10px 15px;
    line-height: 18px;
    text-align: left;
    font-size: 13px;
    font-weight: normal;
    white-space: normal;
    word-break: break-all;
    box-shadow: 1px 1px 3px rgba(0,0,0,0.3);
    border-radius: 3px;
    background-color: $bg-color;
    @if lightness($bg-color) < 50% { // dynamically determine light or dark color based on $bg-color
      color: $white;
    } @else {
      color: $black;
    }
  }
  &:after { content: ''; } // tooltip carrot

  // apply positioning to top and bottom values
  @if $direction == 'nw' or $direction == 'ne' {
    &:before {
      top: -($triangle-size + 3px); bottom: auto; // override with auto in case this tooltip is overriding a previous instance in another direction
      @include transform(translateY(-100%));
    }
    &:after {
      @include triangle(down, $triangle-size, $bg-color);
      top: -($triangle-size + 3px); bottom: auto;
    }
  }
  @else if $direction == 'se' or $direction == 'sw' {
    &:before {
      bottom: -($triangle-size + 3px); top: auto; // extra 3px for spacing
      @include transform(translateY(100%));
    }
    &:after {
      @include triangle(up, $triangle-size, $bg-color);
      bottom: -($triangle-size + 3px); top: auto;
    }
  }

  // apply positioning to left and right values
  @if $direction == 'ne' or $direction == 'se' {
    &:before, &:after {
      left: 50%; right: auto;
      margin-left: -$triangle-size;
    }
    &:before { margin-left: -$triangle-size * 3; }
  }
  @else if $direction == 'nw' or $direction == 'sw' {
    &:before, &:after {
      right: 50%; left: auto;
      margin-right: -$triangle-size;
    }
    &:before { margin-right: -$triangle-size * 3; }
  }
  @else { @warn 'direction not valid in tooltip mixin'; }


  &:hover {
    /* putting comment here so :hover is declared first by itself to fix ie10 bug with transitions on psuedo elements- http://css-tricks.com/pseudo-element-animationstransitions-bug-fixed-in-webkit/ */
    &:before, &:after {
      opacity: 1;
      pointer-events: all;
      @include transition-delay(0ms);
    }
  }
}

.tooltip-holder {
	text-align: center;
	font-family: arial, helvetica, sans-serif;
}

.tooltip {
	&.ne { @include tooltip(ne, darken($basic_blue, 15%)); }
	&.nw { @include tooltip(nw, darken($basic_blue, 15%)); }
	&.se { @include tooltip(se, darken($basic_blue, 15%)); }
	&.sw { @include tooltip(sw, darken($basic_blue, 15%)); }
}

/*===================================
=            Loading bar            =
===================================*/

.loadbar {
	width: 95%;
	margin: 5px auto;
	background: $basic_black;
	height: 5px;
	position: relative;
	@include border-radius(10px);
	.loader {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 5px;
		width: 0px;
		z-index: 10;
		background: $basic_green;
		@include border-radius(10px);
	}
}

.loadbar-info {
	width: 90%;
	margin: 0 auto;
	text-align: center;
	font-size: 0.65em;
	font-style: italic;
	min-height: 14px;
	a {
		color: $basic_blue !important;
	}
}

/*==============================
=            Labels            =
==============================*/

.label-error {
	color: $basic_red !important;
}

/*=============================
=            Login            =
=============================*/

.login {
	.basic-checkbox {
		margin-left: 10px;
		display: inline-block;
	}
}



